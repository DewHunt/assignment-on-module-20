// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  firstName String    @map("first_name") @db.VarChar(50)
  lastName  String    @map("last_name") @db.VarChar(50)
  email     String    @unique @db.VarChar(50)
  mobile    String    @db.VarChar(50)
  password  String    @db.VarChar(50)
  otp       String    @db.VarChar(10)
  createdAt DateTime  @default(now()) @map("creared_at") @db.Timestamp(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("users")
}

model Category {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  name      String    @unique @db.VarChar(100)
  createdAt DateTime  @default(now()) @map("creared_at") @db.Timestamp(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  Blog    Blog[]
  Service Service[]

  @@map("categories")
}

model Social {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  facebook  String    @db.VarChar(200)
  youtube   String    @db.VarChar(200)
  twitter   String    @db.VarChar(200)
  linkedin  String    @db.VarChar(200)
  about     String    @db.Text
  address   String    @db.Text
  createdAt DateTime  @default(now()) @map("creared_at") @db.Timestamp(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("socials")
}

model About {
  id               Int       @id @default(autoincrement()) @db.UnsignedInt
  title            String    @db.VarChar(100)
  shortDescription String    @map("short_description") @db.VarChar(400)
  longDescription  String    @map("long_description") @db.LongText
  img1             String    @db.VarChar(300)
  img2             String    @db.VarChar(300)
  img3             String    @db.VarChar(300)
  img4             String    @db.VarChar(300)
  keywords         String    @db.VarChar(300)
  type             String    @db.VarChar(200)
  createdAt        DateTime  @default(now()) @map("creared_at") @db.Timestamp(0)
  updatedAt        DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("about")
}

model Blog {
  id               Int       @id @default(autoincrement()) @db.UnsignedInt
  categoryId       Int       @map("category_id") @db.UnsignedInt
  title            String    @db.VarChar(100)
  shortDescription String    @map("short_description") @db.VarChar(400)
  longDescription  String    @map("long_description") @db.LongText
  img1             String    @db.VarChar(300)
  img2             String    @db.VarChar(300)
  img3             String    @db.VarChar(300)
  img4             String    @db.VarChar(300)
  keywords         String    @db.VarChar(300)
  type             String    @db.VarChar(200)
  createdAt        DateTime  @default(now()) @map("creared_at") @db.Timestamp(0)
  updatedAt        DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  Category Category @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  @@map("blogs")
}

model Service {
  id               Int       @id @default(autoincrement()) @db.UnsignedInt
  categoryId       Int       @map("category_id") @db.UnsignedInt
  title            String    @db.VarChar(100)
  shortDescription String    @map("short_description") @db.VarChar(400)
  longDescription  String    @map("long_description") @db.LongText
  img1             String    @db.VarChar(300)
  img2             String    @db.VarChar(300)
  img3             String    @db.VarChar(300)
  img4             String    @db.VarChar(300)
  keywords         String    @db.VarChar(300)
  type             String    @db.VarChar(200)
  createdAt        DateTime  @default(now()) @map("creared_at") @db.Timestamp(0)
  updatedAt        DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  Category Category @relation(fields: [categoryId], references: [id], onDelete: Restrict, onUpdate: Cascade)

  @@map("services")
}

model Contact {
  id        Int       @id @default(autoincrement()) @db.UnsignedInt
  address   String    @db.LongText
  email     String    @db.VarChar(300)
  phone     String    @db.VarChar(20)
  createdAt DateTime  @default(now()) @map("creared_at") @db.Timestamp(0)
  updatedAt DateTime? @updatedAt @map("updated_at") @db.Timestamp(0)

  @@map("contacts")
}
